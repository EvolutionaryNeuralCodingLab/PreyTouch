version: '2.3'

services:
  arena:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-arena
    container_name: arena
    privileged: true
    depends_on:
      - cache
      - mqtt
      - logger
    volumes:
    - ../Arena:/arena
    - ../pogona_hunter:/pogona_hunter
    - /tmp/.X11-unix:/tmp/.X11-unix:ro
    restart: always
    runtime: nvidia
    command: "flask run --host=0.0.0.0"
    ports:
      - 3350:8888
      - 3351:5000
    environment:
      - FLASK_APP=api.py
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
      - PYTHONUNBUFFERED=1

  app:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-app
    container_name: pogona_hunter
    depends_on:
      - mqtt
    restart: always
    command: "http-server dist"
#    volumes:
#    - ../pogona_hunter:/app
    ports:
     - 8080:8080

  logger:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-logger
    container_name: logger
    depends_on:
      - mqtt
      - cache
    restart: always
    command: 'celery -A logger worker --loglevel=INFO'
    devices:
      - ${PARPORT_DEVICE-/dev/parport0}
    volumes:
      - ../Arena:/logger
    environment:
      - PYTHONUNBUFFERED=1
      - IS_USE_PARPORT=1

  explore:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-explore
    container_name: explore
    command: 'flask run --host=0.0.0.0'
    ports:
      - 3352:5000
    volumes:
      - ../Arena:/explore
      - ${EXPLORE_DIR-../Arena/experiments}:/explore/experiments
    environment:
      - PYTHONUNBUFFERED=1
      - EXPLORE_EXPERIMENT_DIR=/explore/experiments
      - FLASK_APP=explore.py
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8

  mqtt:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-mqtt
    restart: always
    container_name: mqtt
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - 1883:1883
      - 0.0.0.0:9001:9001

  cache:
    image: redis
    container_name: cache
    restart: always
    ports:
    - 6379:6379

#  rabbitmq:
#    image: rabbitmq:3-management
#    container_name: rabbitmq
#    restart: always
#    ports:
#      - 5672:5672
#      - 15672:15672

#  mongo:
#    image: mongo
#    restart: always
#
#  mongo-express:
#    image: mongo-express
#    restart: always
#    ports:
#      - 27017:27017
#      - 8081:8081