version: '2.3'

services:
  arena:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-arena
    image: pogona_arena:${arena_tag-latest}
    container_name: arena
    privileged: true
    depends_on:
      - cache
      - db
      - mqtt
    volumes:
    - ../pogona_hunter:/pogona_hunter
    - /tmp/.X11-unix:/tmp/.X11-unix:ro
    - ${MEDIA_DIR-/tmp}:/arena/media
    restart: "no"
    runtime: nvidia
    command: "flask run --host=0.0.0.0"
    ports:
      - 3350:8888
      - 3351:5000
    working_dir: ${ROOT_DIR}/Arena
    environment:
      - FLASK_APP=api.py
      - LC_ALL=C.UTF-8
      - LANG=C.UTF-8
      - PYTHONUNBUFFERED=1
      - GENICAM_GENTL64_PATH=/arena/Vimba_6_0/VimbaUSBTL/CTI/x86_64bit

  app:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-app
    image: pogona_app:${app_tag-latest}
    container_name: pogona_hunter
    depends_on:
      - cache
    restart: "unless-stopped"
    command: "http-server dist"
#    volumes:
#    - ../pogona_hunter:/app
    ports:
     - 8080:8080

#  logger:
#    build:
#      context: ..
#      dockerfile: ./docker/Dockerfile-logger
#    image: pogona_logger:${logger_tag-latest}
#    container_name: logger
#    depends_on:
#      - mqtt
#      - cache
#    restart: "no"
#    command: 'celery -A logger worker --loglevel=INFO'
#    devices:
#      - ${PARPORT_DEVICE-/dev/parport0}
#    volumes:
#      - ../Arena:/logger
#    environment:
#      - PYTHONUNBUFFERED=1
#      - IS_USE_PARPORT=${IS_USE_PARPORT-1}

#  explore:
#    build:
#      context: ..
#      dockerfile: ./docker/Dockerfile-explore
#    image: pogona_explore:${explore_tag-latest}
#    container_name: explore
#    command: 'flask run --host=0.0.0.0'
#    restart: "no"
#    ports:
#      - 3352:5000
#    volumes:
#      - ../Arena:/explore
#      - ${EXPLORE_DIR-../Arena/experiments}:/explore/experiments
#    environment:
#      - PYTHONUNBUFFERED=1
#      - EXPLORE_EXPERIMENT_DIR=/explore/experiments
#      - FLASK_APP=explore.py
#      - LC_ALL=C.UTF-8
#      - LANG=C.UTF-8

  mqtt:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-mqtt
    restart: "unless-stopped"
    image: pogona_mqtt:${mqtt_tag-latest}
    container_name: mqtt
    environment:
      - PYTHONUNBUFFERED=1
    ports:
      - 1883:1883
#      - 0.0.0.0:9001:9001

  cache:
    build:
      context: ..
      dockerfile: ./docker/Dockerfile-cache
    image: pogona_cache:${cache_tag-latest}
    container_name: cache
    restart: "unless-stopped"
    ports:
    - 6379:6379
    - 6380:6380

  db:
    image: timescale/timescaledb-ha:pg14-latest
    restart: "unless-stopped"
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=password

  grafana:
    image: grafana/grafana
    restart: "unless-stopped"
    ports:
      - 3000:3000